// Generated from src/grammar/CQL.g4 by ANTLR 4.7.1
// jshint ignore: start
var antlr4 = require('antlr4/index');

var serializedATN = [
  '\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964',
  '\u0002\u001a\u00da\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004',
  '\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t',
  '\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004',
  '\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010',
  '\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013',
  '\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017',
  '\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0003\u0002\u0003\u0002',
  '\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0003',
  '\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006',
  '\u0003\u0006\u0003\u0007\u0003\u0007\u0003\u0007\u0005\u0007F\n\u0007',
  '\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003',
  '\t\u0003\t\u0005\tR\n\t\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003',
  '\n\u0005\nZ\n\n\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003',
  '\u000b\u0003\u000b\u0005\u000bb\n\u000b\u0003\f\u0003\f\u0003\f\u0003',
  '\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0005',
  '\fp\n\f\u0003\r\u0003\r\u0005\rt\n\r\u0003\u000e\u0003\u000e\u0007\u000e',
  'x\n\u000e\f\u000e\u000e\u000e{\u000b\u000e\u0003\u000e\u0003\u000e\u0003',
  '\u000f\u0003\u000f\u0007\u000f\u0081\n\u000f\f\u000f\u000e\u000f\u0084',
  '\u000b\u000f\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0011',
  '\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011',
  '\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0005\u0011',
  '\u0096\n\u0011\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003',
  '\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003',
  '\u0012\u0003\u0012\u0005\u0012\u00a4\n\u0012\u0003\u0013\u0003\u0013',
  '\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013',
  '\u0003\u0013\u0003\u0013\u0005\u0013\u00b0\n\u0013\u0003\u0014\u0003',
  '\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0005\u0014\u00b8',
  '\n\u0014\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0005\u0015',
  '\u00be\n\u0015\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003',
  '\u0016\u0003\u0016\u0005\u0016\u00c6\n\u0016\u0003\u0017\u0003\u0017',
  '\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017',
  '\u0005\u0017\u00d0\n\u0017\u0003\u0018\u0006\u0018\u00d3\n\u0018\r\u0018',
  '\u000e\u0018\u00d4\u0003\u0019\u0003\u0019\u0003\u0019\u0003\u0019\u0002',
  '\u0002\u001a\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007',
  '\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f',
  "\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0014'\u0015)\u0016+\u0017",
  '-\u0018/\u00191\u001a\u0003\u0002\u0005\u0003\u0002$$\u000b\u0002\u000b',
  '\f\u000f\u000f""$$*+..11<<>@\u0005\u0002\u000b\f\u000f\u000f""\u0002',
  '\u00ee\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002',
  '\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002',
  '\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002',
  '\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002',
  '\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002',
  '\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002',
  '\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002',
  '\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002!\u0003\u0002\u0002',
  '\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003\u0002\u0002\u0002',
  "\u0002'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002\u0002\u0002\u0002",
  '+\u0003\u0002\u0002\u0002\u0002-\u0003\u0002\u0002\u0002\u0002/\u0003',
  '\u0002\u0002\u0002\u00021\u0003\u0002\u0002\u0002\u00033\u0003\u0002',
  '\u0002\u0002\u0005:\u0003\u0002\u0002\u0002\u0007<\u0003\u0002\u0002',
  '\u0002\t>\u0003\u0002\u0002\u0002\u000b@\u0003\u0002\u0002\u0002\rE',
  '\u0003\u0002\u0002\u0002\u000fG\u0003\u0002\u0002\u0002\u0011Q\u0003',
  '\u0002\u0002\u0002\u0013Y\u0003\u0002\u0002\u0002\u0015a\u0003\u0002',
  '\u0002\u0002\u0017o\u0003\u0002\u0002\u0002\u0019s\u0003\u0002\u0002',
  '\u0002\u001bu\u0003\u0002\u0002\u0002\u001d~\u0003\u0002\u0002\u0002',
  '\u001f\u0087\u0003\u0002\u0002\u0002!\u0095\u0003\u0002\u0002\u0002',
  "#\u00a3\u0003\u0002\u0002\u0002%\u00af\u0003\u0002\u0002\u0002'\u00b7",
  '\u0003\u0002\u0002\u0002)\u00bd\u0003\u0002\u0002\u0002+\u00c5\u0003',
  '\u0002\u0002\u0002-\u00cf\u0003\u0002\u0002\u0002/\u00d2\u0003\u0002',
  '\u0002\u00021\u00d6\u0003\u0002\u0002\u000234\u0007u\u0002\u000245\u0007',
  'q\u0002\u000256\u0007t\u0002\u000267\u0007v\u0002\u000278\u0007D\u0002',
  '\u000289\u0007{\u0002\u00029\u0004\u0003\u0002\u0002\u0002:;\u0007*',
  '\u0002\u0002;\u0006\u0003\u0002\u0002\u0002<=\u0007+\u0002\u0002=\b',
  '\u0003\u0002\u0002\u0002>?\u0007.\u0002\u0002?\n\u0003\u0002\u0002\u0002',
  "@A\u0007?\u0002\u0002A\f\u0003\u0002\u0002\u0002BF\u0005'\u0014\u0002",
  'CF\u0005)\u0015\u0002DF\u0005+\u0016\u0002EB\u0003\u0002\u0002\u0002',
  'EC\u0003\u0002\u0002\u0002ED\u0003\u0002\u0002\u0002F\u000e\u0003\u0002',
  '\u0002\u0002GH\u0005-\u0017\u0002H\u0010\u0003\u0002\u0002\u0002IR\u0005',
  '%\u0013\u0002JR\u0007>\u0002\u0002KL\u0007>\u0002\u0002LR\u0007?\u0002',
  '\u0002MR\u0007?\u0002\u0002NO\u0007@\u0002\u0002OR\u0007?\u0002\u0002',
  'PR\u0007@\u0002\u0002QI\u0003\u0002\u0002\u0002QJ\u0003\u0002\u0002',
  '\u0002QK\u0003\u0002\u0002\u0002QM\u0003\u0002\u0002\u0002QN\u0003\u0002',
  '\u0002\u0002QP\u0003\u0002\u0002\u0002R\u0012\u0003\u0002\u0002\u0002',
  'ST\u0007c\u0002\u0002TU\u0007p\u0002\u0002UZ\u0007{\u0002\u0002VW\u0007',
  'C\u0002\u0002WX\u0007P\u0002\u0002XZ\u0007[\u0002\u0002YS\u0003\u0002',
  '\u0002\u0002YV\u0003\u0002\u0002\u0002Z\u0014\u0003\u0002\u0002\u0002',
  '[\\\u0007c\u0002\u0002\\]\u0007n\u0002\u0002]b\u0007n\u0002\u0002^_',
  '\u0007C\u0002\u0002_`\u0007N\u0002\u0002`b\u0007N\u0002\u0002a[\u0003',
  '\u0002\u0002\u0002a^\u0003\u0002\u0002\u0002b\u0016\u0003\u0002\u0002',
  '\u0002cd\u0007y\u0002\u0002de\u0007k\u0002\u0002ef\u0007v\u0002\u0002',
  'fg\u0007j\u0002\u0002gh\u0007k\u0002\u0002hp\u0007p\u0002\u0002ij\u0007',
  'Y\u0002\u0002jk\u0007K\u0002\u0002kl\u0007V\u0002\u0002lm\u0007J\u0002',
  '\u0002mn\u0007K\u0002\u0002np\u0007P\u0002\u0002oc\u0003\u0002\u0002',
  '\u0002oi\u0003\u0002\u0002\u0002p\u0018\u0003\u0002\u0002\u0002qt\u0005',
  '/\u0018\u0002rt\u0005\u001d\u000f\u0002sq\u0003\u0002\u0002\u0002sr',
  '\u0003\u0002\u0002\u0002t\u001a\u0003\u0002\u0002\u0002uy\u00071\u0002',
  '\u0002vx\u00051\u0019\u0002wv\u0003\u0002\u0002\u0002x{\u0003\u0002',
  '\u0002\u0002yw\u0003\u0002\u0002\u0002yz\u0003\u0002\u0002\u0002z|\u0003',
  '\u0002\u0002\u0002{y\u0003\u0002\u0002\u0002|}\u0005\u0019\r\u0002}',
  '\u001c\u0003\u0002\u0002\u0002~\u0082\u0007$\u0002\u0002\u007f\u0081',
  '\n\u0002\u0002\u0002\u0080\u007f\u0003\u0002\u0002\u0002\u0081\u0084',
  '\u0003\u0002\u0002\u0002\u0082\u0080\u0003\u0002\u0002\u0002\u0082\u0083',
  '\u0003\u0002\u0002\u0002\u0083\u0085\u0003\u0002\u0002\u0002\u0084\u0082',
  '\u0003\u0002\u0002\u0002\u0085\u0086\u0007$\u0002\u0002\u0086\u001e',
  '\u0003\u0002\u0002\u0002\u0087\u0088\u0007<\u0002\u0002\u0088 \u0003',
  '\u0002\u0002\u0002\u0089\u008a\u0007?\u0002\u0002\u008a\u008b\u0007',
  '1\u0002\u0002\u008b\u008c\u0007u\u0002\u0002\u008c\u008d\u0007c\u0002',
  '\u0002\u008d\u008e\u0007o\u0002\u0002\u008e\u0096\u0007g\u0002\u0002',
  '\u008f\u0090\u0007?\u0002\u0002\u0090\u0091\u00071\u0002\u0002\u0091',
  '\u0092\u0007U\u0002\u0002\u0092\u0093\u0007C\u0002\u0002\u0093\u0094',
  '\u0007O\u0002\u0002\u0094\u0096\u0007G\u0002\u0002\u0095\u0089\u0003',
  '\u0002\u0002\u0002\u0095\u008f\u0003\u0002\u0002\u0002\u0096"\u0003',
  '\u0002\u0002\u0002\u0097\u0098\u0007?\u0002\u0002\u0098\u0099\u0007',
  '1\u0002\u0002\u0099\u009a\u0007j\u0002\u0002\u009a\u009b\u0007k\u0002',
  '\u0002\u009b\u009c\u0007i\u0002\u0002\u009c\u00a4\u0007j\u0002\u0002',
  '\u009d\u009e\u0007?\u0002\u0002\u009e\u009f\u00071\u0002\u0002\u009f',
  '\u00a0\u0007J\u0002\u0002\u00a0\u00a1\u0007K\u0002\u0002\u00a1\u00a2',
  '\u0007I\u0002\u0002\u00a2\u00a4\u0007J\u0002\u0002\u00a3\u0097\u0003',
  '\u0002\u0002\u0002\u00a3\u009d\u0003\u0002\u0002\u0002\u00a4$\u0003',
  '\u0002\u0002\u0002\u00a5\u00a6\u0007?\u0002\u0002\u00a6\u00a7\u0007',
  '1\u0002\u0002\u00a7\u00a8\u0007n\u0002\u0002\u00a8\u00a9\u0007q\u0002',
  '\u0002\u00a9\u00b0\u0007y\u0002\u0002\u00aa\u00ab\u0007?\u0002\u0002',
  '\u00ab\u00ac\u00071\u0002\u0002\u00ac\u00ad\u0007N\u0002\u0002\u00ad',
  '\u00ae\u0007Q\u0002\u0002\u00ae\u00b0\u0007Y\u0002\u0002\u00af\u00a5',
  '\u0003\u0002\u0002\u0002\u00af\u00aa\u0003\u0002\u0002\u0002\u00b0&',
  '\u0003\u0002\u0002\u0002\u00b1\u00b2\u0007c\u0002\u0002\u00b2\u00b3',
  '\u0007p\u0002\u0002\u00b3\u00b8\u0007f\u0002\u0002\u00b4\u00b5\u0007',
  'C\u0002\u0002\u00b5\u00b6\u0007P\u0002\u0002\u00b6\u00b8\u0007F\u0002',
  '\u0002\u00b7\u00b1\u0003\u0002\u0002\u0002\u00b7\u00b4\u0003\u0002\u0002',
  '\u0002\u00b8(\u0003\u0002\u0002\u0002\u00b9\u00ba\u0007q\u0002\u0002',
  '\u00ba\u00be\u0007t\u0002\u0002\u00bb\u00bc\u0007Q\u0002\u0002\u00bc',
  '\u00be\u0007T\u0002\u0002\u00bd\u00b9\u0003\u0002\u0002\u0002\u00bd',
  '\u00bb\u0003\u0002\u0002\u0002\u00be*\u0003\u0002\u0002\u0002\u00bf',
  '\u00c0\u0007p\u0002\u0002\u00c0\u00c1\u0007q\u0002\u0002\u00c1\u00c6',
  '\u0007v\u0002\u0002\u00c2\u00c3\u0007P\u0002\u0002\u00c3\u00c4\u0007',
  'Q\u0002\u0002\u00c4\u00c6\u0007V\u0002\u0002\u00c5\u00bf\u0003\u0002',
  '\u0002\u0002\u00c5\u00c2\u0003\u0002\u0002\u0002\u00c6,\u0003\u0002',
  '\u0002\u0002\u00c7\u00c8\u0007r\u0002\u0002\u00c8\u00c9\u0007t\u0002',
  '\u0002\u00c9\u00ca\u0007q\u0002\u0002\u00ca\u00d0\u0007z\u0002\u0002',
  '\u00cb\u00cc\u0007R\u0002\u0002\u00cc\u00cd\u0007T\u0002\u0002\u00cd',
  '\u00ce\u0007Q\u0002\u0002\u00ce\u00d0\u0007Z\u0002\u0002\u00cf\u00c7',
  '\u0003\u0002\u0002\u0002\u00cf\u00cb\u0003\u0002\u0002\u0002\u00d0.',
  '\u0003\u0002\u0002\u0002\u00d1\u00d3\n\u0003\u0002\u0002\u00d2\u00d1',
  '\u0003\u0002\u0002\u0002\u00d3\u00d4\u0003\u0002\u0002\u0002\u00d4\u00d2',
  '\u0003\u0002\u0002\u0002\u00d4\u00d5\u0003\u0002\u0002\u0002\u00d50',
  '\u0003\u0002\u0002\u0002\u00d6\u00d7\t\u0004\u0002\u0002\u00d7\u00d8',
  '\u0003\u0002\u0002\u0002\u00d8\u00d9\b\u0019\u0002\u0002\u00d92\u0003',
  '\u0002\u0002\u0002\u0013\u0002EQYaosy\u0082\u0095\u00a3\u00af\u00b7',
  '\u00bd\u00c5\u00cf\u00d4\u0003\b\u0002\u0002'
].join('');

var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map(function(ds, index) {
  return new antlr4.dfa.DFA(ds, index);
});

function CQLLexer(input) {
  antlr4.Lexer.call(this, input);
  this._interp = new antlr4.atn.LexerATNSimulator(
    this,
    atn,
    decisionsToDFA,
    new antlr4.PredictionContextCache()
  );
  return this;
}

CQLLexer.prototype = Object.create(antlr4.Lexer.prototype);
CQLLexer.prototype.constructor = CQLLexer;

Object.defineProperty(CQLLexer.prototype, 'atn', {
  get: function() {
    return atn;
  }
});

CQLLexer.EOF = antlr4.Token.EOF;
CQLLexer.T__0 = 1;
CQLLexer.T__1 = 2;
CQLLexer.T__2 = 3;
CQLLexer.T__3 = 4;
CQLLexer.EQUALS = 5;
CQLLexer.BOOLEAN_OPERATOR = 6;
CQLLexer.PROX_OPERATOR = 7;
CQLLexer.RELATION_OPERATOR = 8;
CQLLexer.ANY = 9;
CQLLexer.ALL = 10;
CQLLexer.WITHIN = 11;
CQLLexer.VALUE = 12;
CQLLexer.SLASH_VALUE = 13;
CQLLexer.QUOTED = 14;
CQLLexer.INDEX = 15;
CQLLexer.SAME_RELATION = 16;
CQLLexer.HIGH_RELATION = 17;
CQLLexer.LOW_RELATION = 18;
CQLLexer.AND = 19;
CQLLexer.OR = 20;
CQLLexer.NOT = 21;
CQLLexer.PROX = 22;
CQLLexer.LETTER = 23;
CQLLexer.WS = 24;

CQLLexer.prototype.channelNames = ['DEFAULT_TOKEN_CHANNEL', 'HIDDEN'];

CQLLexer.prototype.modeNames = ['DEFAULT_MODE'];

CQLLexer.prototype.literalNames = [
  null,
  "'sortBy'",
  "'('",
  "')'",
  "','",
  "'='",
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  "':'"
];

CQLLexer.prototype.symbolicNames = [
  null,
  null,
  null,
  null,
  null,
  'EQUALS',
  'BOOLEAN_OPERATOR',
  'PROX_OPERATOR',
  'RELATION_OPERATOR',
  'ANY',
  'ALL',
  'WITHIN',
  'VALUE',
  'SLASH_VALUE',
  'QUOTED',
  'INDEX',
  'SAME_RELATION',
  'HIGH_RELATION',
  'LOW_RELATION',
  'AND',
  'OR',
  'NOT',
  'PROX',
  'LETTER',
  'WS'
];

CQLLexer.prototype.ruleNames = [
  'T__0',
  'T__1',
  'T__2',
  'T__3',
  'EQUALS',
  'BOOLEAN_OPERATOR',
  'PROX_OPERATOR',
  'RELATION_OPERATOR',
  'ANY',
  'ALL',
  'WITHIN',
  'VALUE',
  'SLASH_VALUE',
  'QUOTED',
  'INDEX',
  'SAME_RELATION',
  'HIGH_RELATION',
  'LOW_RELATION',
  'AND',
  'OR',
  'NOT',
  'PROX',
  'LETTER',
  'WS'
];

CQLLexer.prototype.grammarFileName = 'CQL.g4';

exports.CQLLexer = CQLLexer;
